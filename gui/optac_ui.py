# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'optac_gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1521, 863)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabs = QtWidgets.QTabWidget(self.centralwidget)
        self.tabs.setGeometry(QtCore.QRect(10, 10, 1491, 741))
        self.tabs.setObjectName("tabs")
        self.align_tab = QtWidgets.QWidget()
        self.align_tab.setObjectName("align_tab")
        self.stepper_box = QtWidgets.QGroupBox(self.align_tab)
        self.stepper_box.setGeometry(QtCore.QRect(10, 180, 211, 181))
        self.stepper_box.setObjectName("stepper_box")
        self.motor_speed = QtWidgets.QSpinBox(self.stepper_box)
        self.motor_speed.setGeometry(QtCore.QRect(110, 24, 81, 31))
        self.motor_speed.setToolTip("")
        self.motor_speed.setMinimum(100)
        self.motor_speed.setMaximum(1200)
        self.motor_speed.setSingleStep(10)
        self.motor_speed.setObjectName("motor_speed")
        self.label_5 = QtWidgets.QLabel(self.stepper_box)
        self.label_5.setGeometry(QtCore.QRect(110, 6, 71, 20))
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.stepper_box)
        self.label_6.setGeometry(QtCore.QRect(10, 59, 100, 20))
        self.label_6.setObjectName("label_6")
        self.angle = QtWidgets.QSpinBox(self.stepper_box)
        self.angle.setGeometry(QtCore.QRect(10, 79, 81, 31))
        self.angle.setMinimum(-360)
        self.angle.setMaximum(10000)
        self.angle.setSingleStep(1)
        self.angle.setObjectName("angle")
        self.step_motor_btn = QtWidgets.QPushButton(self.stepper_box)
        self.step_motor_btn.setGeometry(QtCore.QRect(10, 120, 81, 21))
        self.step_motor_btn.setStyleSheet("background-color: rgb(150, 150, 150);")
        self.step_motor_btn.setObjectName("step_motor_btn")
        self.rotate_motor_btn = QtWidgets.QPushButton(self.stepper_box)
        self.rotate_motor_btn.setGeometry(QtCore.QRect(110, 120, 81, 21))
        self.rotate_motor_btn.setStyleSheet("background-color: rgb(150, 150, 150);")
        self.rotate_motor_btn.setObjectName("rotate_motor_btn")
        self.motor_type_list = QtWidgets.QComboBox(self.stepper_box)
        self.motor_type_list.setGeometry(QtCore.QRect(8, 34, 91, 22))
        self.motor_type_list.setObjectName("motor_type_list")
        self.label_7 = QtWidgets.QLabel(self.stepper_box)
        self.label_7.setGeometry(QtCore.QRect(10, 14, 71, 20))
        self.label_7.setObjectName("label_7")
        self.motor_init_btn = QtWidgets.QPushButton(self.stepper_box)
        self.motor_init_btn.setGeometry(QtCore.QRect(10, 146, 81, 20))
        self.motor_init_btn.setAutoFillBackground(False)
        self.motor_init_btn.setStyleSheet("background-color: rgb(195, 200, 60);")
        self.motor_init_btn.setObjectName("motor_init_btn")
        self.motor_close_btn = QtWidgets.QPushButton(self.stepper_box)
        self.motor_close_btn.setGeometry(QtCore.QRect(110, 145, 81, 20))
        self.motor_close_btn.setAutoFillBackground(False)
        self.motor_close_btn.setStyleSheet("background-color: rgb(195, 200, 60);")
        self.motor_close_btn.setObjectName("motor_close_btn")
        self.label_14 = QtWidgets.QLabel(self.stepper_box)
        self.label_14.setGeometry(QtCore.QRect(119, 61, 71, 20))
        self.label_14.setObjectName("label_14")
        self.motor_steps = QtWidgets.QSpinBox(self.stepper_box)
        self.motor_steps.setGeometry(QtCore.QRect(117, 80, 81, 31))
        self.motor_steps.setMinimum(2)
        self.motor_steps.setMaximum(720)
        self.motor_steps.setSingleStep(1)
        self.motor_steps.setObjectName("motor_steps")
        self.control = QtWidgets.QGroupBox(self.align_tab)
        self.control.setGeometry(QtCore.QRect(10, 600, 211, 101))
        self.control.setObjectName("control")
        self.stop_btn = QtWidgets.QPushButton(self.control)
        self.stop_btn.setGeometry(QtCore.QRect(26, 25, 151, 31))
        self.stop_btn.setStyleSheet("background-color: rgb(255, 0, 0);")
        self.stop_btn.setObjectName("stop_btn")
        self.exit_btn = QtWidgets.QPushButton(self.control)
        self.exit_btn.setGeometry(QtCore.QRect(26, 60, 151, 31))
        self.exit_btn.setStyleSheet("")
        self.exit_btn.setObjectName("exit_btn")
        self.camera_box = QtWidgets.QGroupBox(self.align_tab)
        self.camera_box.setGeometry(QtCore.QRect(10, 0, 211, 171))
        self.camera_box.setObjectName("camera_box")
        self.frame_rate = QtWidgets.QSpinBox(self.camera_box)
        self.frame_rate.setGeometry(QtCore.QRect(10, 40, 81, 21))
        self.frame_rate.setMinimum(1)
        self.frame_rate.setMaximum(50)
        self.frame_rate.setSingleStep(1)
        self.frame_rate.setObjectName("frame_rate")
        self.camera_type_list = QtWidgets.QComboBox(self.camera_box)
        self.camera_type_list.setGeometry(QtCore.QRect(10, 20, 111, 22))
        self.camera_type_list.setObjectName("camera_type_list")
        self.label_8 = QtWidgets.QLabel(self.camera_box)
        self.label_8.setGeometry(QtCore.QRect(130, 20, 81, 20))
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.camera_box)
        self.label_9.setGeometry(QtCore.QRect(100, 40, 100, 20))
        self.label_9.setObjectName("label_9")
        self.channel_box = QtWidgets.QGroupBox(self.camera_box)
        self.channel_box.setGeometry(QtCore.QRect(0, 70, 71, 101))
        self.channel_box.setObjectName("channel_box")
        self.red_ch = QtWidgets.QRadioButton(self.channel_box)
        self.red_ch.setGeometry(QtCore.QRect(8, 20, 60, 20))
        self.red_ch.setObjectName("red_ch")
        self.green_ch = QtWidgets.QRadioButton(self.channel_box)
        self.green_ch.setGeometry(QtCore.QRect(8, 40, 60, 20))
        self.green_ch.setObjectName("green_ch")
        self.blue_ch = QtWidgets.QRadioButton(self.channel_box)
        self.blue_ch.setGeometry(QtCore.QRect(8, 60, 60, 20))
        self.blue_ch.setObjectName("blue_ch")
        self.amp_ch = QtWidgets.QRadioButton(self.channel_box)
        self.amp_ch.setGeometry(QtCore.QRect(8, 80, 50, 20))
        self.amp_ch.setChecked(True)
        self.amp_ch.setObjectName("amp_ch")
        self.port = QtWidgets.QSpinBox(self.camera_box)
        self.port.setGeometry(QtCore.QRect(90, 110, 81, 21))
        self.port.setMaximum(50)
        self.port.setSingleStep(1)
        self.port.setObjectName("port")
        self.label_18 = QtWidgets.QLabel(self.camera_box)
        self.label_18.setGeometry(QtCore.QRect(90, 90, 100, 20))
        self.label_18.setObjectName("label_18")
        self.acquire_settings_box = QtWidgets.QGroupBox(self.align_tab)
        self.acquire_settings_box.setGeometry(QtCore.QRect(10, 390, 211, 161))
        self.acquire_settings_box.setObjectName("acquire_settings_box")
        self.get_n_frames_btn = QtWidgets.QPushButton(self.acquire_settings_box)
        self.get_n_frames_btn.setGeometry(QtCore.QRect(132, 17, 71, 71))
        self.get_n_frames_btn.setStyleSheet("background-color: rgb(0, 150, 150);")
        self.get_n_frames_btn.setObjectName("get_n_frames_btn")
        self.n_frames = QtWidgets.QSpinBox(self.acquire_settings_box)
        self.n_frames.setGeometry(QtCore.QRect(49, 20, 61, 21))
        self.n_frames.setMinimum(1)
        self.n_frames.setMaximum(1000)
        self.n_frames.setSingleStep(10)
        self.n_frames.setObjectName("n_frames")
        self.frame_count = QtWidgets.QLCDNumber(self.acquire_settings_box)
        self.frame_count.setGeometry(QtCore.QRect(10, 120, 91, 31))
        self.frame_count.setObjectName("frame_count")
        self.label_11 = QtWidgets.QLabel(self.acquire_settings_box)
        self.label_11.setGeometry(QtCore.QRect(10, 102, 71, 20))
        self.label_11.setObjectName("label_11")
        self.no_data_count = QtWidgets.QLCDNumber(self.acquire_settings_box)
        self.no_data_count.setGeometry(QtCore.QRect(117, 120, 81, 31))
        self.no_data_count.setObjectName("no_data_count")
        self.label_12 = QtWidgets.QLabel(self.acquire_settings_box)
        self.label_12.setGeometry(QtCore.QRect(120, 102, 71, 20))
        self.label_12.setObjectName("label_12")
        self.label_15 = QtWidgets.QLabel(self.acquire_settings_box)
        self.label_15.setGeometry(QtCore.QRect(24, 22, 21, 20))
        self.label_15.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_15.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_15.setObjectName("label_15")
        self.frames2avg = QtWidgets.QSpinBox(self.acquire_settings_box)
        self.frames2avg.setGeometry(QtCore.QRect(49, 50, 61, 21))
        self.frames2avg.setMinimum(1)
        self.frames2avg.setMaximum(1000)
        self.frames2avg.setSingleStep(10)
        self.frames2avg.setObjectName("frames2avg")
        self.label_10 = QtWidgets.QLabel(self.acquire_settings_box)
        self.label_10.setGeometry(QtCore.QRect(3, 40, 41, 20))
        self.label_10.setObjectName("label_10")
        self.label_16 = QtWidgets.QLabel(self.acquire_settings_box)
        self.label_16.setGeometry(QtCore.QRect(5, 56, 31, 20))
        self.label_16.setObjectName("label_16")
        self.accum_shots = QtWidgets.QRadioButton(self.acquire_settings_box)
        self.accum_shots.setGeometry(QtCore.QRect(20, 80, 95, 20))
        self.accum_shots.setObjectName("accum_shots")
        self.history_box = QtWidgets.QGroupBox(self.align_tab)
        self.history_box.setGeometry(QtCore.QRect(780, 350, 201, 351))
        self.history_box.setObjectName("history_box")
        self.history = QtWidgets.QPlainTextEdit(self.history_box)
        self.history.setGeometry(QtCore.QRect(10, 20, 181, 321))
        self.history.setObjectName("history")
        self.progressBar = QtWidgets.QProgressBar(self.align_tab)
        self.progressBar.setGeometry(QtCore.QRect(230, 690, 541, 16))
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")
        self.measure_box = QtWidgets.QGroupBox(self.align_tab)
        self.measure_box.setGeometry(QtCore.QRect(780, 130, 201, 201))
        self.measure_box.setObjectName("measure_box")
        self.folder_btn = QtWidgets.QPushButton(self.measure_box)
        self.folder_btn.setGeometry(QtCore.QRect(10, 18, 51, 41))
        self.folder_btn.setObjectName("folder_btn")
        self.folder_path = QtWidgets.QTextBrowser(self.measure_box)
        self.folder_path.setGeometry(QtCore.QRect(62, 18, 131, 41))
        self.folder_path.setObjectName("folder_path")
        self.run_opt_btn = QtWidgets.QPushButton(self.measure_box)
        self.run_opt_btn.setGeometry(QtCore.QRect(10, 150, 181, 41))
        self.run_opt_btn.setStyleSheet("background-color: rgb(0, 150, 150);")
        self.run_opt_btn.setObjectName("run_opt_btn")
        self.label_13 = QtWidgets.QLabel(self.measure_box)
        self.label_13.setGeometry(QtCore.QRect(13, 65, 131, 20))
        self.label_13.setObjectName("label_13")
        self.expr_metadata = QtWidgets.QTextEdit(self.measure_box)
        self.expr_metadata.setGeometry(QtCore.QRect(11, 83, 181, 61))
        self.expr_metadata.setObjectName("expr_metadata")
        self.recon_live = PlotWidget(self.align_tab)
        self.recon_live.setGeometry(QtCore.QRect(980, 50, 491, 491))
        self.recon_live.setObjectName("recon_live")
        self.live_reconstruct = QtWidgets.QRadioButton(self.align_tab)
        self.live_reconstruct.setGeometry(QtCore.QRect(980, 19, 151, 31))
        self.live_reconstruct.setObjectName("live_reconstruct")
        self.recon_px = QtWidgets.QSpinBox(self.align_tab)
        self.recon_px.setGeometry(QtCore.QRect(1150, 13, 81, 31))
        self.recon_px.setMaximum(1200)
        self.recon_px.setSingleStep(10)
        self.recon_px.setObjectName("recon_px")
        self.label_17 = QtWidgets.QLabel(self.align_tab)
        self.label_17.setGeometry(QtCore.QRect(1130, 20, 21, 20))
        self.label_17.setObjectName("label_17")
        self.camera_live = ImageView(self.align_tab)
        self.camera_live.setGeometry(QtCore.QRect(230, 11, 541, 671))
        self.camera_live.setObjectName("camera_live")
        self.toggle_hist = QtWidgets.QRadioButton(self.align_tab)
        self.toggle_hist.setGeometry(QtCore.QRect(780, 0, 131, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.toggle_hist.setFont(font)
        self.toggle_hist.setObjectName("toggle_hist")
        self.min_hist = QtWidgets.QSpinBox(self.align_tab)
        self.min_hist.setGeometry(QtCore.QRect(780, 24, 81, 31))
        self.min_hist.setMaximum(1200)
        self.min_hist.setSingleStep(10)
        self.min_hist.setObjectName("min_hist")
        self.max_hist = QtWidgets.QSpinBox(self.align_tab)
        self.max_hist.setGeometry(QtCore.QRect(780, 54, 81, 31))
        self.max_hist.setMaximum(1200)
        self.max_hist.setSingleStep(10)
        self.max_hist.setObjectName("max_hist")
        self.label = QtWidgets.QLabel(self.align_tab)
        self.label.setGeometry(QtCore.QRect(870, 30, 31, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.align_tab)
        self.label_2.setGeometry(QtCore.QRect(870, 60, 31, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.tabs.addTab(self.align_tab, "")
        self.measure_tab = QtWidgets.QWidget()
        self.measure_tab.setObjectName("measure_tab")
        self.file = QtWidgets.QGroupBox(self.measure_tab)
        self.file.setGeometry(QtCore.QRect(10, 10, 261, 151))
        self.file.setObjectName("file")
        self.lineEdit = QtWidgets.QLineEdit(self.file)
        self.lineEdit.setGeometry(QtCore.QRect(10, 110, 81, 22))
        self.lineEdit.setObjectName("lineEdit")
        self.tabs.addTab(self.measure_tab, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1521, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabs.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.stepper_box.setTitle(_translate("MainWindow", "Stepper motor"))
        self.label_5.setText(_translate("MainWindow", "Motor Speed"))
        self.label_6.setText(_translate("MainWindow", "Angle"))
        self.angle.setToolTip(_translate("MainWindow", "Move angle (appoximate), sign controls rotation direction. Applies only for \'step\' button"))
        self.step_motor_btn.setToolTip(_translate("MainWindow", "Step motor by \'Angle\'."))
        self.step_motor_btn.setText(_translate("MainWindow", "Step"))
        self.rotate_motor_btn.setToolTip(_translate("MainWindow", "Rotate motor continuously."))
        self.rotate_motor_btn.setText(_translate("MainWindow", "Rotate"))
        self.motor_type_list.setToolTip(_translate("MainWindow", "Pick motor type, if you do not have one, it can be simulated by choosing \'virtual\'"))
        self.label_7.setText(_translate("MainWindow", "motor type"))
        self.motor_init_btn.setToolTip(_translate("MainWindow", "Initialize motor, this has to be always done."))
        self.motor_init_btn.setText(_translate("MainWindow", "Initialize"))
        self.motor_close_btn.setToolTip(_translate("MainWindow", "Close motor thread."))
        self.motor_close_btn.setText(_translate("MainWindow", "Close"))
        self.label_14.setText(_translate("MainWindow", "N Steps"))
        self.motor_steps.setToolTip(_translate("MainWindow", "Number of motor steps per full turn"))
        self.control.setTitle(_translate("MainWindow", "Control panel"))
        self.stop_btn.setToolTip(_translate("MainWindow", "Try to stop acquisition, end thread (camera and motor)"))
        self.stop_btn.setText(_translate("MainWindow", "STOP"))
        self.exit_btn.setToolTip(_translate("MainWindow", "Exit application"))
        self.exit_btn.setText(_translate("MainWindow", "EXIT"))
        self.camera_box.setTitle(_translate("MainWindow", "Camera settings"))
        self.frame_rate.setToolTip(_translate("MainWindow", "in frames per second. Can be set only for some cameras"))
        self.camera_type_list.setToolTip(_translate("MainWindow", "Select camera type, if you do not have one, select \'virtual\' and we generate data for you"))
        self.label_8.setText(_translate("MainWindow", "Camera Type"))
        self.label_9.setText(_translate("MainWindow", "Frame Rate"))
        self.channel_box.setTitle(_translate("MainWindow", "Channels"))
        self.red_ch.setToolTip(_translate("MainWindow", "For RGB camera, you can select red channel only"))
        self.red_ch.setText(_translate("MainWindow", "R ch"))
        self.green_ch.setToolTip(_translate("MainWindow", "For RGB camera, you can select GREEN channel only"))
        self.green_ch.setText(_translate("MainWindow", "G ch"))
        self.blue_ch.setToolTip(_translate("MainWindow", "For RGB camera, you can select BLUE channel only"))
        self.blue_ch.setText(_translate("MainWindow", "B ch"))
        self.amp_ch.setToolTip(_translate("MainWindow", "For monochrome or RGB cameras, greyscale is available"))
        self.amp_ch.setText(_translate("MainWindow", "Ampl"))
        self.port.setToolTip(_translate("MainWindow", "If you know which port is your camera at, otherwise use \'find camre button\'"))
        self.label_18.setText(_translate("MainWindow", "Port"))
        self.acquire_settings_box.setTitle(_translate("MainWindow", "Acquire Settings"))
        self.get_n_frames_btn.setToolTip(_translate("MainWindow", "Acquire N frames, each one averaged"))
        self.get_n_frames_btn.setText(_translate("MainWindow", "Acquire\n"
"N*M"))
        self.n_frames.setToolTip(_translate("MainWindow", "Acquire N frames"))
        self.frame_count.setToolTip(_translate("MainWindow", "Counting frames in the N frame acquisition"))
        self.label_11.setText(_translate("MainWindow", "Frame Count"))
        self.no_data_count.setToolTip(_translate("MainWindow", "Monitors frames, if for some reason frame was not send, or it was empty, this counter shows it to you"))
        self.label_12.setText(_translate("MainWindow", "No Data Count"))
        self.label_15.setText(_translate("MainWindow", "N"))
        self.frames2avg.setToolTip(_translate("MainWindow", "Each frame consists of M averaged frames"))
        self.label_10.setText(_translate("MainWindow", "Avg. M"))
        self.label_16.setText(_translate("MainWindow", "shots"))
        self.accum_shots.setToolTip(_translate("MainWindow", "Instead of averaging, you can accumulate frames. This leads to floating numbers and high memory usage."))
        self.accum_shots.setText(_translate("MainWindow", "Accum shots"))
        self.history_box.setTitle(_translate("MainWindow", "History"))
        self.measure_box.setTitle(_translate("MainWindow", "Measure"))
        self.folder_btn.setText(_translate("MainWindow", "Folder"))
        self.run_opt_btn.setText(_translate("MainWindow", "RUN OPT"))
        self.label_13.setText(_translate("MainWindow", "Experiment Metadata"))
        self.live_reconstruct.setText(_translate("MainWindow", "Live Reconstruction"))
        self.label_17.setText(_translate("MainWindow", "PX"))
        self.camera_live.setToolTip(_translate("MainWindow", "Main frame display"))
        self.toggle_hist.setText(_translate("MainWindow", "toggle levels"))
        self.label.setText(_translate("MainWindow", "Min"))
        self.label_2.setText(_translate("MainWindow", "Max"))
        self.tabs.setTabText(self.tabs.indexOf(self.align_tab), _translate("MainWindow", "Align"))
        self.file.setTitle(_translate("MainWindow", "File, metadata"))
        self.tabs.setTabText(self.tabs.indexOf(self.measure_tab), _translate("MainWindow", "Measure"))
from pyqtgraph import ImageView, PlotWidget
